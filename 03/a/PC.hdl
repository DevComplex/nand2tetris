// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // determine whether we are loading a new value into the register
    Or3Way(a=load, b=inc, c=reset, out=aload);
    
    // figure out the input into the register
    Inc16(in=rout, out=incrout);
    Mux16(a=in, b=incrout, sel=inc, out=inA);    
    Mux16(a=inA, b=in, sel=load, out=inB);
    Mux16(a=inB, b[0..15]=false, sel=reset, out=inC);

    // if load, inc, reset are not set we use the output of the previous register
    Mux16(a=rout, b=inC, sel=aload, out=inD);
    
    Register(in=inD, load=aload, out=out, out=rout);
}
